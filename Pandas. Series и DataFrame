# from scipy import stats
# import numpy as np
# # Задание 1
# # Создание объекта распределения
# dist = stats.norm(loc=0, scale=1) # Нормальное распределение с параметрами (среднее=0, стандартное отклонение=1)
# uni = stats.uniform(loc=0, scale=1) # Равномерное распределение на интервале [0, 1]
#
# # Получение значения функции плотности вероятности
# pdf_value = dist.pdf(0)
# pdf_value1 = uni.pdf(0)
#
# # Получение значения функции распределения
# cdf_value = dist.cdf(1)
# cdf_value1 = uni.cdf(1)
#
# # Генерация случайных чисел из распределения
# random_values = dist.rvs(size=10), uni.rvs(size=10)
#
# print(random_values)
#
# # Задание 2
#
# # Одновыборочный t-тест
# # Создание выборки из 10 случайных чисел из Uniform(-1, 1)
# sample = np.random.uniform(-1, 1, 10)
# # Проверьте гипотезу о том, что среднее значение выборки равно 0.
# t_statistic, p_value = stats.ttest_1samp(sample, popmean=0) # Попмеан устанавливаем 0
#
# print(t_statistic, p_value)

## Задание 1
import pandas as pd

"""При создании объекта типа Series с индексом, содержащим повторяющиеся элементы, ожидается,
что в результате выполнения кода будет создан объект Series, где индексы могут повторяться.
При обращении к объекту по индексу, который повторяется, ожидается получить несколько значений,
соответствующих этому индексу. Например, при создании такого объекта:"""

# data = pd.Series([10, 20, 30, 40], index=['a', 'b', 'a', 'c'])
# print(data)
# print(data['a'])

"""На самом деле при обращении к объекту по индексу, который повторяется, возвращается несколько значений,
соответствующих этому индексу."""

## Задание 2
"""При создании объекта типа Series из словаря с пятью ключами и значениями, 
указав в качестве индекса список из трех ключей из словаря, получившийся объект 
будет содержать значения только для указанных ключей. """

#data = pd.Series({'a': 10, 'b': 20, 'c': 30, 'd': 40, 'e': 50}, index=['a', 'c', 'd'])
#print(data)

"""Получившийся объект будет содержать значения только для ключей 'a', 'c' и 'd'."""

## Задание 3
# data = pd.Series({i: i**2 for i in range(1, 21) if i % 3 != 0})
# print(data)

## Задание 4
# # Считывание данных из файла "students.csv"
# df = pd.read_csv("students.csv")
# 
# # Вывод первых трех строк датафрейма
# print(df.head(3))
# 
# # Вывод последних двух строк датафрейма
# print(df.tail(2))
# 
# # Получение общей информации о датафрейме
# print(df.info())
